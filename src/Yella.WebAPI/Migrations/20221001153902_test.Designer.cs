// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Yella.WebAPI.Context;

#nullable disable

namespace Yella.WebAPI.Migrations
{
    [DbContext(typeof(YellaDbContext))]
    [Migration("20221001153902_test")]
    partial class test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("Identity")
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Yella.Identity.Entities.IdentityPermission<Yella.WebAPI.Entities.User, Yella.WebAPI.Entities.Role>", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<short>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Module")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("IdentityPermissions", "Identity");
                });

            modelBuilder.Entity("Yella.Identity.Entities.IdentityPermissionRole<Yella.WebAPI.Entities.User, Yella.WebAPI.Entities.Role>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<short>("IdentityPermissionId")
                        .HasColumnType("smallint");

                    b.Property<Guid>("IdentityRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdentityPermissionId");

                    b.HasIndex("IdentityRoleId");

                    b.ToTable("IdentityPermissionRoles", "Identity");
                });

            modelBuilder.Entity("Yella.Identity.Entities.IdentityUserRole<Yella.WebAPI.Entities.User, Yella.WebAPI.Entities.Role>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdentityRoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdentityUserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdentityRoleId");

                    b.HasIndex("IdentityUserId");

                    b.ToTable("IdentityUserRoles", "Identity");
                });

            modelBuilder.Entity("Yella.WebAPI.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles", "Identity");
                });

            modelBuilder.Entity("Yella.WebAPI.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", "Identity");
                });

            modelBuilder.Entity("Yella.Identity.Entities.IdentityPermissionRole<Yella.WebAPI.Entities.User, Yella.WebAPI.Entities.Role>", b =>
                {
                    b.HasOne("Yella.Identity.Entities.IdentityPermission<Yella.WebAPI.Entities.User, Yella.WebAPI.Entities.Role>", "IdentityPermission")
                        .WithMany("IdentityPermissionRoles")
                        .HasForeignKey("IdentityPermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yella.WebAPI.Entities.Role", "IdentityRole")
                        .WithMany()
                        .HasForeignKey("IdentityRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityPermission");

                    b.Navigation("IdentityRole");
                });

            modelBuilder.Entity("Yella.Identity.Entities.IdentityUserRole<Yella.WebAPI.Entities.User, Yella.WebAPI.Entities.Role>", b =>
                {
                    b.HasOne("Yella.WebAPI.Entities.Role", "IdentityRole")
                        .WithMany("UserRoles")
                        .HasForeignKey("IdentityRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Yella.WebAPI.Entities.User", "IdentityUser")
                        .WithMany("IdentityUserRoles")
                        .HasForeignKey("IdentityUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdentityRole");

                    b.Navigation("IdentityUser");
                });

            modelBuilder.Entity("Yella.Identity.Entities.IdentityPermission<Yella.WebAPI.Entities.User, Yella.WebAPI.Entities.Role>", b =>
                {
                    b.Navigation("IdentityPermissionRoles");
                });

            modelBuilder.Entity("Yella.WebAPI.Entities.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Yella.WebAPI.Entities.User", b =>
                {
                    b.Navigation("IdentityUserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
